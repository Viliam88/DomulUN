{"ast":null,"code":"import _slicedToArray from\"C:/Users/vhudc/Desktop/du/domul2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/createContext();// Explicitly exporting ThemeContext\nexport var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDarkMode=_useState2[0],setIsDarkMode=_useState2[1];var toggleTheme=function toggleTheme(){setIsDarkMode(function(prevMode){return!prevMode;});};var theme={isDarkMode:isDarkMode,toggleTheme:toggleTheme};// Apply dark mode styles to the entire page\nif(isDarkMode){document.body.style.backgroundColor=\"#000\";// Set background color to black\ndocument.body.style.color=\"#fff\";// Set text color to white\n// You can add more styles here to customize elements in dark mode\n}else{document.body.style.backgroundColor=\"#fff\";// Reset background color to white\ndocument.body.style.color=\"#000\";// Reset text color to black\n// Reset other styles if needed for light mode\n}return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:theme,children:children});};export var useTheme=function useTheme(){return useContext(ThemeContext);};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","toggleTheme","prevMode","theme","document","body","style","backgroundColor","color","Provider","value","useTheme"],"sources":["C:/Users/vhudc/Desktop/du/domul2/src/components/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nexport const ThemeContext = createContext(); // Explicitly exporting ThemeContext\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const theme = {\r\n    isDarkMode,\r\n    toggleTheme,\r\n  };\r\n\r\n  // Apply dark mode styles to the entire page\r\n  if (isDarkMode) {\r\n    document.body.style.backgroundColor = \"#000\"; // Set background color to black\r\n    document.body.style.color = \"#fff\"; // Set text color to white\r\n    // You can add more styles here to customize elements in dark mode\r\n  } else {\r\n    document.body.style.backgroundColor = \"#fff\"; // Reset background color to white\r\n    document.body.style.color = \"#000\"; // Reset text color to black\r\n    // Reset other styles if needed for light mode\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};\r\n"],"mappings":"sHAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,MAAO,IAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAAE;AAE7C,MAAO,IAAM,CAAAM,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACtC,IAAAC,SAAA,CAAoCP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAEhC,GAAM,CAAAI,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxBD,aAAa,CAAC,SAACE,QAAQ,QAAK,CAACA,QAAQ,GAAC,CACxC,CAAC,CAED,GAAM,CAAAC,KAAK,CAAG,CACZJ,UAAU,CAAVA,UAAU,CACVE,WAAW,CAAXA,WACF,CAAC,CAED;AACA,GAAIF,UAAU,CAAE,CACdK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,MAAM,CAAE;AAC9CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,MAAM,CAAE;AACpC;AACF,CAAC,IAAM,CACLJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,MAAM,CAAE;AAC9CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,MAAM,CAAE;AACpC;AACF,CAEA,mBACEjB,IAAA,CAACC,YAAY,CAACiB,QAAQ,EAACC,KAAK,CAAEP,KAAM,CAAAR,QAAA,CAAEA,QAAQ,CAAwB,CAAC,CAE3E,CAAC,CAED,MAAO,IAAM,CAAAgB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CAC5B,MAAO,CAAAvB,UAAU,CAACI,YAAY,CAAC,CACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}