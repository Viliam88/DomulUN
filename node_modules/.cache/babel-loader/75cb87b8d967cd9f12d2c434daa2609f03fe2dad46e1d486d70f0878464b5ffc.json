{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vhudc\\\\Desktop\\\\du\\\\domul2\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ShoppingListApp extends Component {\n  constructor() {\n    super();\n    // ... (existing methods remain the same)\n    // Function to toggle dark mode\n    this.toggleDarkMode = () => {\n      this.setState(prevState => ({\n        darkMode: !prevState.darkMode\n      }));\n    };\n    this.state = {\n      items: [],\n      newItem: \"\",\n      collaborationURL: \"\",\n      savedLists: [],\n      selectedListIndex: -1,\n      darkMode: false // New state for dark mode\n    };\n  }\n\n  render() {\n    const {\n      items,\n      newItem,\n      collaborationURL,\n      savedLists,\n      selectedListIndex,\n      darkMode // Include darkMode in component state\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"100vh\",\n        // Apply different styles based on darkMode state\n        backgroundColor: darkMode ? \"#000000\" : \"#ffffff\",\n        color: darkMode ? \"#ffffff\" : \"#000000\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleDarkMode,\n        style: {\n          fontSize: \"18px\",\n          padding: \"15px 30px\",\n          // Adjust button styles based on darkMode state\n          backgroundColor: darkMode ? \"#ffffff\" : \"#000000\",\n          color: darkMode ? \"#000000\" : \"#ffffff\"\n        },\n        children: darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ShoppingListApp;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ShoppingListApp","constructor","toggleDarkMode","setState","prevState","darkMode","state","items","newItem","collaborationURL","savedLists","selectedListIndex","render","style","display","flexDirection","alignItems","justifyContent","minHeight","backgroundColor","color","children","onClick","fontSize","padding","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/vhudc/Desktop/du/domul2/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass ShoppingListApp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      newItem: \"\",\n      collaborationURL: \"\",\n      savedLists: [],\n      selectedListIndex: -1,\n      darkMode: false, // New state for dark mode\n    };\n  }\n\n  // ... (existing methods remain the same)\n\n  // Function to toggle dark mode\n  toggleDarkMode = () => {\n    this.setState((prevState) => ({\n      darkMode: !prevState.darkMode,\n    }));\n  };\n\n  render() {\n    const {\n      items,\n      newItem,\n      collaborationURL,\n      savedLists,\n      selectedListIndex,\n      darkMode, // Include darkMode in component state\n    } = this.state;\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"100vh\",\n          // Apply different styles based on darkMode state\n          backgroundColor: darkMode ? \"#000000\" : \"#ffffff\",\n          color: darkMode ? \"#ffffff\" : \"#000000\",\n        }}\n      >\n        {/* Your existing content */}\n        {/* ... */}\n        {/* Button to toggle dark mode */}\n        <button\n          onClick={this.toggleDarkMode}\n          style={{\n            fontSize: \"18px\",\n            padding: \"15px 30px\",\n            // Adjust button styles based on darkMode state\n            backgroundColor: darkMode ? \"#ffffff\" : \"#000000\",\n            color: darkMode ? \"#000000\" : \"#ffffff\",\n          }}\n        >\n          {darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingListApp;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,eAAe,SAASH,SAAS,CAAC;EACtCI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAWT;IAEA;IAAA,KACAC,cAAc,GAAG,MAAM;MACrB,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,QAAQ,EAAE,CAACD,SAAS,CAACC;MACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAjBC,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,gBAAgB,EAAE,EAAE;MACpBC,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE,CAAC,CAAC;MACrBN,QAAQ,EAAE,KAAK,CAAE;IACnB,CAAC;EACH;;EAWAO,MAAMA,CAAA,EAAG;IACP,MAAM;MACJL,KAAK;MACLC,OAAO;MACPC,gBAAgB;MAChBC,UAAU;MACVC,iBAAiB;MACjBN,QAAQ,CAAE;IACZ,CAAC,GAAG,IAAI,CAACC,KAAK;IAEd,oBACEP,OAAA;MACEc,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,SAAS,EAAE,OAAO;QAClB;QACAC,eAAe,EAAEd,QAAQ,GAAG,SAAS,GAAG,SAAS;QACjDe,KAAK,EAAEf,QAAQ,GAAG,SAAS,GAAG;MAChC,CAAE;MAAAgB,QAAA,eAKFtB,OAAA;QACEuB,OAAO,EAAE,IAAI,CAACpB,cAAe;QAC7BW,KAAK,EAAE;UACLU,QAAQ,EAAE,MAAM;UAChBC,OAAO,EAAE,WAAW;UACpB;UACAL,eAAe,EAAEd,QAAQ,GAAG,SAAS,GAAG,SAAS;UACjDe,KAAK,EAAEf,QAAQ,GAAG,SAAS,GAAG;QAChC,CAAE;QAAAgB,QAAA,EAEDhB,QAAQ,GAAG,sBAAsB,GAAG;MAAqB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF;AAEA,eAAe5B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}